#!/usr/bin/wish
package require Tk

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é –∫–æ–¥–∏—Ä–æ–≤–∫—É UTF-8
encoding system utf-8

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å
if {[info exists ::env(LANG)] && ![string match -nocase "*utf-8*" $::env(LANG)]} {
    puts "Warning: System locale is '$::env(LANG)', expected UTF-8 (e.g., ru_RU.UTF-8)"
}

# –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
wm title . "Markdown Editor"
wm attributes . -zoomed 1 ;# –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –æ–∫–Ω–æ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
set fontSize 12
set theme "light"
set configFile [file join [pwd] temarcus.conf]
set buttonSize 14 ;# –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫
array set listNumbers {} ;# –•—Ä–∞–Ω–∏—Ç –Ω—É–º–µ—Ä–∞—Ü–∏—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—Ä–æ–≤–Ω—è –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏
set search_query "" ;# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
set search_pos "" ;# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –ø–æ–∑–∏—Ü–∏–∏ –ø–æ–∏—Å–∫–∞
set fileModified 0 ;# –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ñ–∞–π–ª–µ
set currentFile "" ;# –¢–µ–∫—É—â–∏–π –æ—Ç–∫—Ä—ã—Ç—ã–π —Ñ–∞–π–ª

# –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞–Ω–∏—Ü undo-–æ–ø–µ—Ä–∞—Ü–∏–π —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
proc markUndoBoundary {} {
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –ø—É—Å—Ç–æ–π –ª–∏ —Ç–µ–∫—Å—Ç
    if {[string length [.editor get 1.0 end-1c]] > 0} {
        catch {.editor edit separator}
    }
}

# –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è undo
proc safeUndo {} {
    if {[.editor edit canundo]} {
        .editor edit undo
    }
}

# –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è redo
proc safeRedo {} {
    if {[.editor edit canredo]} {
        .editor edit redo
    }
}

# –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ —Ñ–∞–π–ª–∞
proc loadConfig {} {
    global fontSize theme configFile buttonSize
    if {[file exists $configFile]} {
        if {[catch {
            set fp [open $configFile r]
            fconfigure $fp -encoding utf-8
            set data [read $fp]
            close $fp
            foreach line [split $data \n] {
                if {[regexp {^fontSize=(\d+)$} $line -> size]} {
                    set fontSize $size
                } elseif {[regexp {^theme=(light|dark)$} $line -> th]} {
                    set theme $th
                } elseif {[regexp {^buttonSize=(\d+)$} $line -> bsize]} {
                    set buttonSize $bsize
                }
            }
        } err]} {
            puts "Error loading config: $err"
        }
    }
}

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ —Ñ–∞–π–ª
proc saveConfig {} {
    global fontSize theme configFile buttonSize
    if {[catch {
        set fp [open $configFile w]
        fconfigure $fp -encoding utf-8
        puts $fp "fontSize=$fontSize"
        puts $fp "theme=$theme"
        puts $fp "buttonSize=$buttonSize"
        close $fp
    } err]} {
        tk_messageBox -message "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: $err" -type ok -icon error
    }
}

# –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
loadConfig

# –°–æ–∑–¥–∞–µ–º —Ñ—Ä–µ–π–º –¥–ª—è –ø–∞–Ω–µ–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
frame .toolbar -relief raised -bd 1
pack .toolbar -side top -fill x

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ —Å –∑–∞–¥–∞–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º —à—Ä–∏—Ñ—Ç–∞ –∏ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–π –ø–æ–¥—Å–∫–∞–∑–∫–æ–π
proc createButton {path text command tooltip {width 0}} {
    global buttonSize
    button $path -text $text -command $command -font "Arial $buttonSize" -height 2 -width $width
    bind $path <Enter> [list showTooltip %W $tooltip]
    bind $path <Leave> [list hideTooltip]
    return $path
}

# –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–ø–ª—ã–≤–∞—é—â–∏—Ö –ø–æ–¥—Å–∫–∞–∑–æ–∫
proc showTooltip {widget text} {
    global tooltipWin
    if {[info exists tooltipWin] && [winfo exists $tooltipWin]} {
        destroy $tooltipWin
    }
    set tooltipWin [toplevel .tooltip -background lightyellow -borderwidth 1 -relief solid]
    wm overrideredirect $tooltipWin 1
    label $tooltipWin.label -text $text -background lightyellow -font "Arial 10"
    pack $tooltipWin.label
    set x [expr {[winfo rootx $widget] + [winfo width $widget]/2}]
    set y [expr {[winfo rooty $widget] + [winfo height $widget] + 5}]
    wm geometry $tooltipWin +$x+$y
}

proc hideTooltip {} {
    global tooltipWin
    if {[info exists tooltipWin] && [winfo exists $tooltipWin]} {
        destroy $tooltipWin
    }
}

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Markdown –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞–º–∏
createButton .toolbar.new "üìÑ New" newFile "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç"
createButton .toolbar.open "üìÇ Open" openFile "–û—Ç–∫—Ä—ã—Ç—å Markdown-—Ñ–∞–π–ª"
createButton .toolbar.save "üíæ Save" {saveCurrentFile 0} "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª"
createButton .toolbar.saveas "üíæ Save As" {saveCurrentFile 1} "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å Markdown-—Ñ–∞–π–ª –∫–∞–∫..."
createButton .toolbar.undo "‚Ü©Ô∏è –û—Ç–º–µ–Ω–∞" {safeUndo} "–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ"
createButton .toolbar.redo "‚Ü™Ô∏è –ü–æ–≤—Ç–æ—Ä" {safeRedo} "–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –æ—Ç–º–µ–Ω—ë–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ"
createButton .toolbar.bold "** **" {insertMarkdown "**" "**"} "–í—ã–¥–µ–ª–∏—Ç—å —Ç–µ–∫—Å—Ç –∂–∏—Ä–Ω—ã–º"
createButton .toolbar.italic "* *" {insertMarkdown "*" "*"} "–í—ã–¥–µ–ª–∏—Ç—å —Ç–µ–∫—Å—Ç –∫—É—Ä—Å–∏–≤–æ–º"
createButton .toolbar.underline "U_" {insertMarkdown "**<u>" "</u>**"} "–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—å —Ç–µ–∫—Å—Ç"
createButton .toolbar.header "##" {insertMarkdown "## " ""} "–î–æ–±–∞–≤–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫"
createButton .toolbar.list "1." {insertOrderedList} "–î–æ–±–∞–≤–∏—Ç—å —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫"
createButton .toolbar.link "[]()" {insertMarkdown "\[" "\]()"} "–í—Å—Ç–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É"
createButton .toolbar.image "üñºÔ∏è" insertImage "–í—Å—Ç–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
createButton .toolbar.code "```" {insertMarkdown "```\n" "\n```"} "–í—Å—Ç–∞–≤–∏—Ç—å –±–ª–æ–∫ –∫–æ–¥–∞"
createButton .toolbar.quote ">" {insertMarkdown "> " ""} "–î–æ–±–∞–≤–∏—Ç—å —Ü–∏—Ç–∞—Ç—É"
createButton .toolbar.preview "üëÅÔ∏è Preview" previewMarkdown "–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä Markdown"

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –∫–Ω–æ–ø–æ–∫
createButton .toolbar.btnPlus "‚ûï" {changeButtonSize 2} "–£–≤–µ–ª–∏—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–æ–∫" 3
createButton .toolbar.btnMinus "‚ûñ" {changeButtonSize -2} "–£–º–µ–Ω—å—à–∏—Ç—å —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–æ–∫" 3

# –ß–µ–∫–±–æ–∫—Å –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
checkbutton .toolbar.theme -text "Dark Theme" -variable themeToggle -command toggleTheme -font "Arial $buttonSize"
bind .toolbar.theme <Enter> {showTooltip .toolbar.theme "–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç—ë–º–Ω—É—é/—Å–≤–µ—Ç–ª—É—é —Ç–µ–º—É"}
bind .toolbar.theme <Leave> {hideTooltip}
if {$theme == "dark"} {
    set themeToggle 1
} else {
    set themeToggle 0
}

# –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏
pack .toolbar.new .toolbar.open .toolbar.save .toolbar.saveas -side left -padx 2 -pady 2
pack .toolbar.undo .toolbar.redo -side left -padx 2 -pady 2
pack .toolbar.bold .toolbar.italic .toolbar.underline .toolbar.header .toolbar.list .toolbar.link .toolbar.image .toolbar.code .toolbar.quote .toolbar.preview -side left -padx 2 -pady 2
pack .toolbar.btnPlus .toolbar.btnMinus -side left -padx 2 -pady 2
pack .toolbar.theme -side left -padx 2 -pady 2

# –°–æ–∑–¥–∞–µ–º —Ñ—Ä–µ–π–º –¥–ª—è –ø–æ–∏—Å–∫–∞
frame .search_frame
pack .search_frame -side bottom -fill x -padx 5 -pady 5

# –ü–æ–ª–µ –≤–≤–æ–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
entry .search_frame.search_entry -font "Arial $fontSize"
pack .search_frame.search_entry -side left -padx 5
.search_frame.search_entry insert 0 "–ü–æ–∏—Å–∫..."

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –ø–æ–∏—Å–∫–∞
createButton .search_frame.prev "‚óÑ" search_prev "–ü—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞" 3
createButton .search_frame.next "‚ñ∫" search_next "–°–ª–µ–¥—É—é—â–µ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞" 3
pack .search_frame.prev .search_frame.next -side left -padx 5

# –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –æ–±–ª–∞—Å—Ç—å —Å –≤–∫–ª—é—á–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π –æ—Ç–º–µ–Ω—ã
text .editor -wrap word -undo true -autoseparators true -maxundo 2000 -font "Arial $fontSize" -yscrollcommand ".scroll set"
scrollbar .scroll -command ".editor yview"
pack .scroll -side right -fill y
pack .editor -side top -fill both -expand true -padx 5 -pady 5

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã
proc applyTheme {} {
    global theme
    if {$theme == "dark"} {
        .editor configure -background "#2e2e2e" -foreground "#ffffff" -insertbackground "#ffffff"
        .toolbar configure -background "#3c3c3c"
        .search_frame configure -background "#3c3c3c"
        . configure -background "#3c3c3c"
        .search_frame.search_entry configure -background "#3c3c3c" -foreground "#ffffff" -insertbackground "#ffffff"
        foreach w [winfo children .toolbar] {
            if {[winfo class $w] == "Button" || [winfo class $w] == "Checkbutton"} {
                $w configure -background "#3c3c3c" -foreground "#ffffff" -activebackground "#555555"
            }
        }
        foreach w [winfo children .search_frame] {
            if {[winfo class $w] == "Button"} {
                $w configure -background "#3c3c3c" -foreground "#ffffff" -activebackground "#555555"
            }
        }
        .scroll configure -background "#3c3c3c" -troughcolor "#2e2e2e"
    } else {
        .editor configure -background "white" -foreground "black" -insertbackground "black"
        .toolbar configure -background "#d9d9d9"
        .search_frame configure -background "#d9d9d9"
        . configure -background "#d9d9d9"
        .search_frame.search_entry configure -background "white" -foreground "black" -insertbackground "black"
        foreach w [winfo children .toolbar] {
            if {[winfo class $w] == "Button" || [winfo class $w] == "Checkbutton"} {
                $w configure -background "#d9d9d9" -foreground "black" -activebackground "#e0e0e0"
            }
        }
        foreach w [winfo children .search_frame] {
            if {[winfo class $w] == "Button"} {
                $w configure -background "#d9d9d9" -foreground "black" -activebackground "#e0e0e0"
            }
        }
        .scroll configure -background "#d9d9d9" -troughcolor "#f0f0f0"
    }
}

# –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
proc toggleTheme {} {
    global theme themeToggle
    if {$themeToggle} {
        set theme "dark"
    } else {
        set theme "light"
    }
    applyTheme
    saveConfig
}

# –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
applyTheme

# –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤ —Å—Ç—Ä–æ–∫
proc normalizeLineEndings {text} {
    return [string map {"\r\n" "\n" "\r" "\n"} $text]
}

# –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–µ–∫—Å—Ç–∞
proc search_text {} {
    global search_query search_pos
    set search_query [.search_frame.search_entry get]
    if {$search_query eq "" || $search_query eq "–ü–æ–∏—Å–∫..."} {
        return
    }
    .editor tag remove sel 1.0 end
    set start_pos [expr {$search_pos eq "" ? "1.0" : $search_pos}]
    set search_pos [.editor search -nocase -forward $search_query $start_pos end]
    if {$search_pos ne ""} {
        set end_pos [.editor index "$search_pos + [string length $search_query] chars"]
        .editor tag add sel $search_pos $end_pos
        .editor see $search_pos
    } else {
        tk_messageBox -message "–¢–µ–∫—Å—Ç '$search_query' –Ω–µ –Ω–∞–π–¥–µ–Ω" -type ok -icon info
        set search_pos ""
    }
}

# –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
proc search_prev {} {
    global search_query search_pos
    if {$search_query eq "" || $search_query eq "–ü–æ–∏—Å–∫..."} {
        return
    }
    if {$search_pos eq ""} {
        set search_pos "end"
    }
    .editor tag remove sel 1.0 end
    set new_pos [.editor search -nocase -backward $search_query $search_pos 1.0]
    if {$new_pos ne ""} {
        set search_pos $new_pos
        set end_pos [.editor index "$search_pos + [string length $search_query] chars"]
        .editor tag add sel $search_pos $end_pos
        .editor see $search_pos
    } else {
        tk_messageBox -message "–ü—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ" -type ok -icon info
        set search_pos ""
    }
}

# –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
proc search_next {} {
    global search_query search_pos
    if {$search_query eq "" || $search_query eq "–ü–æ–∏—Å–∫..."} {
        return
    }
    if {$search_pos eq ""} {
        set search_pos "1.0"
    } else {
        set search_pos [.editor index "$search_pos + [string length $search_query] chars"]
    }
    .editor tag remove sel 1.0 end
    set new_pos [.editor search -nocase -forward $search_query $search_pos end]
    if {$new_pos ne ""} {
        set search_pos $new_pos
        set end_pos [.editor index "$search_pos + [string length $search_query] chars"]
        .editor tag add sel $search_pos $end_pos
        .editor see $search_pos
    } else {
        tk_messageBox -message "–°–ª–µ–¥—É—é—â–µ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ" -type ok -icon info
        set search_pos ""
    }
}

# –ü—Ä–∏–≤—è–∑–∫–∞ –∫–ª–∞–≤–∏—à–∏ Enter –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ–∏—Å–∫–∞
bind .search_frame.search_entry <Return> {search_text}

# –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è –ø–æ–∏—Å–∫–∞ –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ
bind .search_frame.search_entry <FocusIn> {
    if {[.search_frame.search_entry get] eq "–ü–æ–∏—Å–∫..."} {
        .search_frame.search_entry delete 0 end
    }
}

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ placeholder –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞, –µ—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ
bind .search_frame.search_entry <FocusOut> {
    if {[.search_frame.search_entry get] eq ""} {
        .search_frame.search_entry insert 0 "–ü–æ–∏—Å–∫..."
    }
}

# –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —à—Ä–∏—Ñ—Ç–∞
proc changeFontSize {delta} {
    global fontSize
    set newSize [expr {$fontSize + $delta}]
    if {$newSize >= 8 && $newSize <= 72} {
        set fontSize $newSize
        .editor configure -font "Arial $fontSize"
        .search_frame.search_entry configure -font "Arial $fontSize"
        saveConfig
    }
}

# –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –∫–Ω–æ–ø–æ–∫
proc changeButtonSize {delta} {
    global buttonSize
    set newSize [expr {$buttonSize + $delta}]
    if {$newSize >= 10 && $newSize <= 36} {
        set buttonSize $newSize
        updateButtonSizes
        saveConfig
    }
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
proc updateButtonSizes {} {
    global buttonSize
    foreach w [winfo children .toolbar] {
        if {[winfo class $w] == "Button" || [winfo class $w] == "Checkbutton"} {
            $w configure -font "Arial $buttonSize"
        }
    }
    foreach w [winfo children .search_frame] {
        if {[winfo class $w] == "Button"} {
            $w configure -font "Arial $buttonSize"
        }
    }
}

# –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ç–µ–∫—Å—Ç–µ - —É–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
proc trackChanges {} {
    global fileModified
    if {![.editor edit modified]} {
        return
    }
    markUndoBoundary
    set fileModified 1
    .editor edit modified 0
}

# –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ Markdown-—Ç–µ–≥–æ–≤
proc insertMarkdown {startTag endTag} {
    global fileModified
    markUndoBoundary
    set sel [.editor tag ranges sel]
    if {$sel != ""} {
        # –ï—Å–ª–∏ –µ—Å—Ç—å –≤—ã–¥–µ–ª–µ–Ω–∏–µ, –æ–±—Ä–∞–º–ª—è–µ–º –µ–≥–æ —Ç–µ–≥–∞–º–∏
        set start [lindex $sel 0]
        set end [lindex $sel 1]
        .editor insert $end $endTag
        .editor insert $start $startTag
    } else {
        # –ï—Å–ª–∏ –Ω–µ—Ç –≤—ã–¥–µ–ª–µ–Ω–∏—è, –≤—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–≥–∏ –≤ –ø–æ–∑–∏—Ü–∏—é –∫—É—Ä—Å–æ—Ä–∞
        .editor insert insert $startTag
        .editor insert insert $endTag
        .editor mark set insert "insert - [string length $endTag] chars"
    }
    markUndoBoundary
    set fileModified 1
}

# –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
proc insertOrderedList {} {
    global listNumbers fileModified
    markUndoBoundary
    set sel [.editor tag ranges sel]
    if {$sel != ""} {
        # –ï—Å–ª–∏ –µ—Å—Ç—å –≤—ã–¥–µ–ª–µ–Ω–∏–µ, –≤—Å—Ç–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –ø—É–Ω–∫—Ç
        set start [lindex $sel 0]
        .editor insert $start "1. "
        set listNumbers(0) 1
        markUndoBoundary
        set fileModified 1
        return
    }

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é –∫—É—Ä—Å–æ—Ä–∞
    set cursorPos [.editor index insert]
    set currentLine [lindex [split $cursorPos .] 0]
    set currentCol [lindex [split $cursorPos .] 1]

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–æ–∫–∏
    set currentLineText [.editor get "$currentLine.0" "$currentLine.0 lineend"]
    set indent ""
    set level 0
    set number 1

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç—Å—Ç—É–ø–æ–≤ –≤ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–æ–∫–µ
    if {[regexp {^(\s*)} $currentLineText -> spaces]} {
        set spaceCount [string length $spaces]
        set level [expr {$spaceCount / 2}]
        set indent [string repeat "  " $level]
    }

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω—É–º–µ—Ä–∞—Ü–∏–∏ –∏ —É—Ä–æ–≤–Ω—è
    set prevLineNum [expr {$currentLine - 1}]
    if {$prevLineNum > 0} {
        set prevLineText [.editor get "$prevLineNum.0" "$prevLineNum.0 lineend"]
        if {$prevLineText eq "" && $level == 0} {
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω—É–º–µ—Ä–∞—Ü–∏—é –ø–æ—Å–ª–µ –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–∏
            array unset listNumbers
            set number 1
        } elseif {[regexp {^(\s*)(\d+)\.\s} $prevLineText -> prevSpaces num]} {
            set prevSpaceCount [string length $prevSpaces]
            set prevLevel [expr {$prevSpaceCount / 2}]
            if {$level == $prevLevel} {
                # –¢–æ—Ç –∂–µ —É—Ä–æ–≤–µ–Ω—å –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä
                if {[info exists listNumbers($level)]} {
                    set number [expr {$listNumbers($level) + 1}]
                }
            } elseif {$level > $prevLevel} {
                # –ù–æ–≤—ã–π, –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å, –Ω–∞—á–∏–Ω–∞–µ–º —Å 1
                set number 1
            } elseif {$level < $prevLevel} {
                # –ú–µ–Ω—å—à–∏–π —É—Ä–æ–≤–µ–Ω—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω—É–º–µ—Ä–∞—Ü–∏—é –¥–ª—è —ç—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è
                if {[info exists listNumbers($level)]} {
                    set number [expr {$listNumbers($level) + 1}]
                }
            }
        } else {
            # –ï—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–µ —Å–ø–∏—Å–æ–∫, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω—É–º–µ—Ä–∞—Ü–∏—é
            set number 1
        }
    }

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–π –ø—É–Ω–∫—Ç –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ
    set insertNewLine 0
    if {[regexp {^\s*\d+\.\s*.+} $currentLineText] || ([regexp {^\s*\d+\.\s*$} $currentLineText] && $currentCol >= [string length $currentLineText])} {
        set insertNewLine 1
    }

    if {$insertNewLine} {
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø—É–Ω–∫—Ç –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ
        .editor insert "$currentLine.end" "\n$indent$number. "
        incr currentLine
    } else {
        # –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø—É—Å—Ç–∞—è –∏–ª–∏ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏, –∑–∞–º–µ–Ω—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        .editor delete "$currentLine.0" "$currentLine.0 lineend"
        .editor insert "$currentLine.0" "$indent$number. "
    }

    # –û–±–Ω–æ–≤–ª—è–µ–º –Ω—É–º–µ—Ä–∞—Ü–∏—é –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
    set listNumbers($level) $number

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä –≤ –∫–æ–Ω–µ—Ü –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    set cursorPos "$currentLine.[expr {[string length $indent] + [string length "$number. "]}]"
    .editor mark set insert $cursorPos
    markUndoBoundary
    set fileModified 1
}

# –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏
proc increaseIndent {} {
    global fileModified
    markUndoBoundary
    set cursorPos [.editor index insert]
    set currentLine [lindex [split $cursorPos .] 0]
    set lineText [.editor get "$currentLine.0" "$currentLine.0 lineend"]
    if {[regexp {^(\s*)(\d+\.\s.*)?$} $lineText -> spaces rest]} {
        set newIndent [string cat $spaces "  "]
        .editor delete "$currentLine.0" "$currentLine.0 lineend"
        .editor insert "$currentLine.0" "$newIndent$rest"
        .editor mark set insert "$currentLine.[expr {[string length $newIndent] + [string length $rest]}]"
    } else {
        .editor insert "$currentLine.0" "  "
        .editor mark set insert "insert + 2 chars"
    }
    markUndoBoundary
    set fileModified 1
}

# –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏
proc decreaseIndent {} {
    global fileModified
    markUndoBoundary
    set cursorPos [.editor index insert]
    set currentLine [lindex [split $cursorPos .] 0]
    set lineText [.editor get "$currentLine.0" "$currentLine.0 lineend"]
    if {[regexp {^(\s{2,})(\d+\.\s.*)?$} $lineText -> spaces rest]} {
        set newIndent [string range $spaces 2 end]
        .editor delete "$currentLine.0" "$currentLine.0 lineend"
        .editor insert "$currentLine.0" "$newIndent$rest"
        .editor mark set insert "$currentLine.[expr {[string length $newIndent] + [string length $rest]}]"
    }
    markUndoBoundary
    set fileModified 1
}

# –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
proc insertImage {} {
    global fileModified
    set file [tk_getOpenFile -filetypes {{{Images} {.png .jpg .jpeg .gif}}} -title "–í—ã–±—Ä–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"]
    if {$file != ""} {
        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø—É—Ç–µ–π
        set escapedFile $file
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—Ä–∞—Ç–Ω—ã–µ —Å–ª—ç—à–∏ –≤ –ø—Ä—è–º—ã–µ –¥–ª—è Markdown
        regsub -all {\\} $escapedFile "/" escapedFile
        # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
        set escapedFile [string map {" " "%20" "(" "%28" ")" "%29"} $escapedFile]
        set markdownImage "!\[Alt text\]($escapedFile)"
        
        markUndoBoundary
        .editor insert insert $markdownImage
        markUndoBoundary
        set fileModified 1
    }
}

# –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
proc newFile {} {
    global fileModified currentFile
    if {$fileModified} {
        set answer [tk_messageBox -message "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞?" -type yesnocancel -icon question]
        if {$answer == "yes"} {
            saveCurrentFile 0
            if {$fileModified} {
                # –ï—Å–ª–∏ –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª –≤—Å—ë –µ—â—ë –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–π, 
                # –∑–Ω–∞—á–∏—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ
                return
            }
        } elseif {$answer == "cancel"} {
            return
        }
    }
    .editor delete 1.0 end
    set fileModified 0
    set currentFile ""
    wm title . "Markdown Editor - New Document"
    .editor edit reset
    markUndoBoundary
}

# –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞
proc openFile {} {
    global fileModified currentFile
    if {$fileModified} {
        set answer [tk_messageBox -message "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –æ—Ç–∫—Ä—ã—Ç–∏–µ–º –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞?" -type yesnocancel -icon question]
        if {$answer == "yes"} {
            saveCurrentFile 0
            if {$fileModified} {
                # –ï—Å–ª–∏ –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª –≤—Å—ë –µ—â—ë –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–π, 
                # –∑–Ω–∞—á–∏—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ
                return
            }
        } elseif {$answer == "cancel"} {
            return
        }
    }
    set file [tk_getOpenFile -filetypes {{{Markdown Files} {.md .markdown}} {{All Files} {*.*}}} -title "–û—Ç–∫—Ä—ã—Ç—å Markdown-—Ñ–∞–π–ª"]
    if {$file != ""} {
        if {[catch {
            set fp [open $file r]
            fconfigure $fp -encoding utf-8 -translation auto
            set content [read $fp]
            close $fp
            
            # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏–º–≤–æ–ª–æ–≤ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏
            set content [normalizeLineEndings $content]
            
            .editor delete 1.0 end
            .editor insert 1.0 $content
            .editor edit reset
            markUndoBoundary
            set fileModified 0
            set currentFile $file
            wm title . "Markdown Editor - [file tail $file]"
        } err]} {
            tk_messageBox -message "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–∞–π–ª–∞: $err" -type ok -icon error
        }
    }
}

# –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞
proc saveCurrentFile {forcePrompt} {
    global fileModified currentFile
    
    # –ï—Å–ª–∏ –Ω–µ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞ –∏–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–∏–∞–ª–æ–≥ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫"
    if {$currentFile == "" || $forcePrompt} {
        set file [tk_getSaveFile -filetypes {{{Markdown Files} {.md .markdown}} {{All Files} {*.*}}} -title "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å Markdown-—Ñ–∞–π–ª –∫–∞–∫" -defaultextension .md]
        if {$file == ""} {
            return ;# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        }
        set currentFile $file
    }
    
    if {[catch {
        set content [.editor get 1.0 "end-1c"]
        # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏–º–≤–æ–ª–æ–≤ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏
        set content [normalizeLineEndings $content]
        
        set fp [open $currentFile w]
        fconfigure $fp -encoding utf-8 -translation lf
        puts -nonewline $fp $content
        close $fp
        set fileModified 0
        wm title . "Markdown Editor - [file tail $currentFile]"
    } err]} {
        tk_messageBox -message "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: $err" -type ok -icon error
    }
}

# –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
proc previewMarkdown {} {
    global fileModified currentFile
    set marcusScript [file join [pwd] marcus_w6.tcl]
    set mdFile ""
    
    if {$currentFile != "" && [file exists $currentFile]} {
        # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å
        set mdFile [file normalize $currentFile]
    } else {
        # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–æ–≤—ã–π, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        set tmpFile [file join [pwd] tmp.md]
        if {[catch {
            set content [.editor get 1.0 "end-1c"]
            # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏–º–≤–æ–ª–æ–≤ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏
            set content [normalizeLineEndings $content]
            
            set fp [open $tmpFile w]
            fconfigure $fp -encoding utf-8 -translation lf
            puts -nonewline $fp $content
            close $fp
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ tmp.md
            set mdFile [file normalize $tmpFile]
        } err]} {
            tk_messageBox -message "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: $err" -type ok -icon error
            return
        }
    }
    
    if {[catch {
        if {[file exists $marcusScript]} {
            if {[auto_execok python3] != ""} {
                puts "DEBUG: –ó–∞–ø—É—Å–∫ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å —Ñ–∞–π–ª–æ–º: $mdFile"
                exec wish $marcusScript $mdFile &
            } else {
                tk_messageBox -message "–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è." -type ok -icon error
            }
        } else {
            tk_messageBox -message "–°–∫—Ä–∏–ø—Ç marcus_w4.tcl –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏" -type ok -icon error
        }
    } err]} {
        tk_messageBox -message "–û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞: $err" -type ok -icon error
    }
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
proc onClose {} {
    global fileModified
    if {$fileModified} {
        set answer [tk_messageBox -message "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º?" -type yesnocancel -icon question]
        if {$answer == "yes"} {
            saveCurrentFile 0
            if {!$fileModified} {
                destroy .
            }
        } elseif {$answer == "no"} {
            destroy .
        }
    } else {
        destroy .
    }
}

# –ü—Ä–∏–≤—è–∑–∫–∏ –¥–ª—è –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à
bind .editor <Control-b> {insertMarkdown "**" "**"; break}
bind .editor <Control-i> {insertMarkdown "*" "*"; break}
bind .editor <Control-u> {insertMarkdown "**<u>" "</u>**"; break}
bind .editor <Control-n> {newFile; break}
bind .editor <Control-o> {openFile; break}
bind .editor <Control-s> {saveCurrentFile 0; break}
bind .editor <Control-Shift-s> {saveCurrentFile 1; break}
bind .editor <Control-z> {safeUndo; break}
bind .editor <Control-y> {safeRedo; break}
bind .editor <Control-Shift-z> {safeRedo; break}
bind .editor <Control-q> {insertMarkdown "> " ""; break}
bind .editor <Control-a> {.editor tag add sel 1.0 end-1c; break}
bind .editor <Tab> {increaseIndent; break}
bind .editor <Shift-Tab> {decreaseIndent; break}

# –ü—Ä–∏–≤—è–∑–∫–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
bind .editor <KeyPress> {+trackChanges}
bind .editor <BackSpace> {+trackChanges}
bind .editor <Delete> {+trackChanges}
bind .editor <Return> {+trackChanges}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∫—Ä–æ–ª–ª–µ—Ä–∞ —Å Ctrl –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —à—Ä–∏—Ñ—Ç–∞
bind . <Control-MouseWheel> {
    if {%D > 0} {
        changeFontSize 1
    } elseif {%D < 0} {
        changeFontSize -1
    }
}
bind . <Control-Button-4> {changeFontSize 1}
bind . <Control-Button-5> {changeFontSize -1}

# –ü–µ—Ä–µ—Ö–≤–∞—Ç —Å–æ–±—ã—Ç–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
wm protocol . WM_DELETE_WINDOW onClose

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã undo
markUndoBoundary

# –§–æ–∫—É—Å –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –ø–æ–ª–µ
focus .editor